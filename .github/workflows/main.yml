name: build

on:
  pull_request:
    paths:
      - '**'

  push:
    paths:
      - '**'
      - '!docs/**'
      - '!contrib/**'
  
env:
  DOCKER_USER: gadockersvc


jobs:
  main:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        docker_image:
          - opendatacube/datacube-tests:latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: pat-s/always-upload-cache@v2.1.5
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: DockerHub Login
      id: login
      if: |
        github.event_name == 'push'
        && github.ref == 'refs/heads/develop'
      uses: docker/login-action@v2
      with:
        username: ${DOCKER_USER}
        password: ${{ secrets.DockerPassword }}

    - name: Build Docker
      uses: docker/build-push-action@v4
      with:
        file: docker/Dockerfile
        context: .
        tags: ${{ matrix.docker_image }}
        load: true
    
    - name: Build Packages
      run: |
        cat <<EOF | docker run --rm -i  \
                  -v $(pwd):/code \
                  -e SKIP_DB=yes \
                  ${{ matrix.docker_image }} bash -
        python setup.py bdist_wheel sdist
        ls -lh ./dist/
        twine check ./dist/*
        EOF

    - name: Verify and Run Tests
      run: |
        echo "Verify that twine is installed"
        docker run --rm opendatacube/datacube-tests:latest twine --version

        echo "Run tests"
        cat <<EOF | docker run --rm -i -v $(pwd):/code ${{ matrix.docker_image }} bash -
          pip install -e /code/tests/drivers/fail_drivers --no-deps
          pip install -e /code/examples/io_plugin --no-deps

          pytest -r a \
            --cov datacube \
            --cov-report=xml \
            --doctest-ignore-import-errors \
            --durations=5 \
            datacube \
            tests \
            integration_tests
        EOF

    - name: DockerHub Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ matrix.docker_image }}
       
    - name: Publish to PyPi
      if: |
        github.event_name == 'push'
        && github.ref == 'refs/heads/pypi/publish'
      run: |
        if [ -n "${TWINE_PASSWORD}" ]; then
          docker run --rm  \
            -v $(pwd):/code \
            -e SKIP_DB=yes \
            ${{ matrix.docker_image }} \
            twine upload \
              --verbose \
              --non-interactive \
              --disable-progress-bar \
              --username=__token__ \
              --password=${TWINE_PASSWORD} \
              --skip-existing dist/*
        else
           echo "Skipping upload as 'PyPiToken' is not set"
        fi

      env:
        TWINE_PASSWORD: ${{ secrets.PyPiToken }}

    - name: Upload coverage to Codecov
      if: steps.cfg.outputs.primary == 'yes'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
