name: build

on:
  pull_request:
  push:
    branches:
      - develop
    paths:
      - '**'
      - '!docs/**'
      - '!contrib/**'
  release:
    types:
      - published
  workflow_dispatch:

env:
  DOCKER_IMAGE: ghrc.io/opendatacube/datacube-core:tests

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker
      uses: docker/build-push-action@v6
      with:
        file: docker/Dockerfile
        context: .
        tags: ${{ env.DOCKER_IMAGE }}
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify and Run Tests
      run: |
        echo "Run tests"
        cat <<EOF | docker run --rm -i -v $(pwd):/code ${{ env.DOCKER_IMAGE }} bash -
          set -euo pipefail

          pip install -e /code/tests/drivers/fail_drivers --no-deps
          pip install -e /code/examples/io_plugin --no-deps

          pytest -r a \
            --cov datacube \
            --cov-report=xml \
            --doctest-ignore-import-errors \
            --durations=5 \
            datacube \
            tests \
            integration_tests
        EOF

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Build Packages
      run: |
        uv build
        uv tool run twine check dist/*

    # Uses to OIDC identification between GitHub and PyPI
    - name: Upload package to PyPI on GitHub Release
      if: "github.repository_owner == 'opendatacube' && github.event.action == 'published'"
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
