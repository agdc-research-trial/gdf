name: build

on:
  pull_request:
  push:
    branches:
      - develop
    paths:
      - '**'
      - '!docs/**'
      - '!contrib/**'

  workflow_dispatch:

env:
  DOCKER_IMAGE: ghrc.io/opendatacube/datacube-core:tests

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker
      uses: docker/build-push-action@v6
      with:
        file: docker/Dockerfile
        context: .
        tags: ${{ env.DOCKER_IMAGE }}
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify and Run Tests
      run: |
        echo "Run tests"
        cat <<EOF | docker run --rm -v $(pwd):/code ${{ env.DOCKER_IMAGE }} bash -
          pip install -e /code/tests/drivers/fail_drivers --no-deps
          pip install -e /code/examples/io_plugin --no-deps
          pytest -r a \
            --cov datacube \
            --cov-report=xml \
            --doctest-ignore-import-errors \
            --durations=5 \
            datacube \
            tests \
            integration_tests
        EOF

    - name: Build Packages
      run: |
        cat <<EOF | docker run --rm -i  \
                  -v $(pwd):/code \
                  -e SKIP_DB=yes \
                  ${{ env.DOCKER_IMAGE }} bash -
        python setup.py bdist_wheel sdist
        ls -lh ./dist/
        twine check ./dist/*
        EOF

    - name: Publish to PyPi
      if: |
        github.repository_owner == 'opendatacube' && github.event.action == 'published'
      run: |
        if [ -n "${TWINE_PASSWORD}" ]; then
          docker run --rm  \
            -v $(pwd):/code \
            -e SKIP_DB=yes \
            ${{ env.DOCKER_IMAGE }} \
            twine upload \
              --verbose \
              --non-interactive \
              --disable-progress-bar \
              --username=__token__ \
              --password=${TWINE_PASSWORD} \
              --skip-existing dist/*
        else
           echo "Skipping upload as 'PyPiToken' is not set"
        fi

      env:
        TWINE_PASSWORD: ${{ secrets.PyPiToken }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
