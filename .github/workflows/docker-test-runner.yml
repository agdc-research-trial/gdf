name: Docker (test runner)

on:
  pull_request:
    paths:
      - 'docker/**'
      - '.github/workflows/docker-test-runner.yml'
      - 'setup.py'
      - 'setup.cfg'
      - 'check-code.sh'

  push:
    paths:
      - 'docker/**'
      - '.github/workflows/docker-test-runner.yml'
      - 'setup.py'
      - 'setup.cfg'
      - 'check-code.sh'

env:
  ORG: opendatacube
  IMAGE: datacube-tests
  DOCKER_USER: gadockersvc


jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - name: Build Test Runner Docker
      id: build
      run: |
        echo ::set-output name=docker_image::${ORG}/${IMAGE}:latest
        make -C docker

    - name: Verify Docker Image
      run: |
        # Make sure we test docker image we built
        if [[ "${{ steps.build.outputs.docker_image }}" != "opendatacube/datacube-tests:latest" ]]; then
            docker tag "${{ steps.build.outputs.docker_image }}" opendatacube/datacube-tests:latest
        fi

        ./check-code.sh --with-docker integration_tests

        echo "Verify that twine is installed"
        docker run --rm opendatacube/datacube-tests:latest twine --version

    - name: DockerHub Login
      id: dkr
      if: |
        github.event_name == 'push' && (
          github.ref == 'refs/heads/develop'
          )
      run: |
        if [ -n "${{ secrets.DockerPassword }}" ]; then
           echo "Login to DockerHub as ${DOCKER_USER}"
           echo "${{ secrets.DockerPassword }}" | docker login -u "${DOCKER_USER}" --password-stdin
           echo "::set-output name=logged_in::yes"
        else
           echo "Set DockerPassword secret to push to docker"
        fi

    - name: DockerHub Push
      if: |
        github.event_name == 'push' && (
          github.ref == 'refs/heads/develop'
          ) && steps.dkr.outputs.logged_in == 'yes'
      run: |
        if [ -n "${{ secrets.DockerPassword }}" ]; then
           docker push "${{ steps.build.outputs.docker_image }}"
        fi
